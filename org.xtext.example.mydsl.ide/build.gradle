apply plugin: 'application'

dependencies {
	compile project(':org.xtext.example.mydsl')
	compile "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
}

configurations {
	
	repositories {
		 mavenLocal()
	}
}
// Add a start script for the socket case
mainClassName = 'org.eclipse.emf.eson.ide.RunServer'

tasks.withType(JavaExec) {
    jvmArgs = ['-Xms1g', '-Xmx6g' , '-agentpath:C:\\ProgramData\\YourKit\\2020.9.410.3CF74696\\64\\yjpagent.dll=delay=10000'] 
}
startScripts {
	applicationName = 'mydsl-socket'
}

// Add another start script for the standalone / self-contained case
task standaloneStartScript(type: CreateStartScripts) {
	mainClassName = 'org.eclipse.emf.eson.ide.ServerLauncher'
	applicationName = 'mydsl-standalone'
	outputDir = new File(project.buildDir, 'scripts')
	classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into("bin") {
	from(standaloneStartScript)
	fileMode = 0755
}