dependencies {
	compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
	compile "org.eclipse.jdt:org.eclipse.jdt.annotation:2.2.600"
	compile "org.eclipse.efbt.cocamo.smcubes:org.eclipse.efbt.cocamo.smcubes.model.core:1.0.0-SNAPSHOT"
	compile "org.eclipse.efbt.cocamo.core:org.eclipse.efbt.cocamo.core.model.module_management:1.0.0-SNAPSHOT"
	compile "org.eclipse.efbt.cocamo.core:org.eclipse.efbt.cocamo.core.model.functionality_module:1.0.0-SNAPSHOT"
	compile "org.eclipse.efbt.cocamo.core:org.eclipse.efbt.cocamo.core.model.requirements_text:1.0.0-SNAPSHOT"
}
configurations {
	mwe2 {
		extendsFrom compile
	}
	repositories {
		 mavenLocal()
	}
}

dependencies {
	mwe2 "org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.8.3"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/org/eclipse/emf/eson/GenerateEFactory.mwe2"
	inputs.file "src/org/eclipse/emf/eson/EFactory.xtext"
	outputs.dir "src-gen"
	args += "src/org/eclipse/emf/eson/GenerateEFactory.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
